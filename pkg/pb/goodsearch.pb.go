// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goodsearch.proto

package goodsearch

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_SUCCESS Status = 0
	Status_FAILURE Status = 1
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}

var Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{0}
}

type GetExperienceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperienceReq) Reset()         { *m = GetExperienceReq{} }
func (m *GetExperienceReq) String() string { return proto.CompactTextString(m) }
func (*GetExperienceReq) ProtoMessage()    {}
func (*GetExperienceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{0}
}

func (m *GetExperienceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperienceReq.Unmarshal(m, b)
}
func (m *GetExperienceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperienceReq.Marshal(b, m, deterministic)
}
func (m *GetExperienceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperienceReq.Merge(m, src)
}
func (m *GetExperienceReq) XXX_Size() int {
	return xxx_messageInfo_GetExperienceReq.Size(m)
}
func (m *GetExperienceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperienceReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperienceReq proto.InternalMessageInfo

func (m *GetExperienceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetExperienceResp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExperienceResp) Reset()         { *m = GetExperienceResp{} }
func (m *GetExperienceResp) String() string { return proto.CompactTextString(m) }
func (*GetExperienceResp) ProtoMessage()    {}
func (*GetExperienceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{1}
}

func (m *GetExperienceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExperienceResp.Unmarshal(m, b)
}
func (m *GetExperienceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExperienceResp.Marshal(b, m, deterministic)
}
func (m *GetExperienceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExperienceResp.Merge(m, src)
}
func (m *GetExperienceResp) XXX_Size() int {
	return xxx_messageInfo_GetExperienceResp.Size(m)
}
func (m *GetExperienceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExperienceResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetExperienceResp proto.InternalMessageInfo

func (m *GetExperienceResp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetExperienceResp) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type UpdateExperienceReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateExperienceReq) Reset()         { *m = UpdateExperienceReq{} }
func (m *UpdateExperienceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateExperienceReq) ProtoMessage()    {}
func (*UpdateExperienceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{2}
}

func (m *UpdateExperienceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExperienceReq.Unmarshal(m, b)
}
func (m *UpdateExperienceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExperienceReq.Marshal(b, m, deterministic)
}
func (m *UpdateExperienceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExperienceReq.Merge(m, src)
}
func (m *UpdateExperienceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateExperienceReq.Size(m)
}
func (m *UpdateExperienceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExperienceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExperienceReq proto.InternalMessageInfo

func (m *UpdateExperienceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateExperienceResp struct {
	Status               Status             `protobuf:"varint,1,opt,name=status,proto3,enum=goodsearch.Status" json:"status,omitempty"`
	Experience           *ExperiencePayload `protobuf:"bytes,2,opt,name=experience,proto3" json:"experience,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateExperienceResp) Reset()         { *m = UpdateExperienceResp{} }
func (m *UpdateExperienceResp) String() string { return proto.CompactTextString(m) }
func (*UpdateExperienceResp) ProtoMessage()    {}
func (*UpdateExperienceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{3}
}

func (m *UpdateExperienceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExperienceResp.Unmarshal(m, b)
}
func (m *UpdateExperienceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExperienceResp.Marshal(b, m, deterministic)
}
func (m *UpdateExperienceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExperienceResp.Merge(m, src)
}
func (m *UpdateExperienceResp) XXX_Size() int {
	return xxx_messageInfo_UpdateExperienceResp.Size(m)
}
func (m *UpdateExperienceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExperienceResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExperienceResp proto.InternalMessageInfo

func (m *UpdateExperienceResp) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *UpdateExperienceResp) GetExperience() *ExperiencePayload {
	if m != nil {
		return m.Experience
	}
	return nil
}

type ExperiencePayload struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExperiencePayload) Reset()         { *m = ExperiencePayload{} }
func (m *ExperiencePayload) String() string { return proto.CompactTextString(m) }
func (*ExperiencePayload) ProtoMessage()    {}
func (*ExperiencePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{4}
}

func (m *ExperiencePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExperiencePayload.Unmarshal(m, b)
}
func (m *ExperiencePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExperiencePayload.Marshal(b, m, deterministic)
}
func (m *ExperiencePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperiencePayload.Merge(m, src)
}
func (m *ExperiencePayload) XXX_Size() int {
	return xxx_messageInfo_ExperiencePayload.Size(m)
}
func (m *ExperiencePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperiencePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ExperiencePayload proto.InternalMessageInfo

func (m *ExperiencePayload) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type IndexAllExperiencesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexAllExperiencesReq) Reset()         { *m = IndexAllExperiencesReq{} }
func (m *IndexAllExperiencesReq) String() string { return proto.CompactTextString(m) }
func (*IndexAllExperiencesReq) ProtoMessage()    {}
func (*IndexAllExperiencesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{5}
}

func (m *IndexAllExperiencesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexAllExperiencesReq.Unmarshal(m, b)
}
func (m *IndexAllExperiencesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexAllExperiencesReq.Marshal(b, m, deterministic)
}
func (m *IndexAllExperiencesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexAllExperiencesReq.Merge(m, src)
}
func (m *IndexAllExperiencesReq) XXX_Size() int {
	return xxx_messageInfo_IndexAllExperiencesReq.Size(m)
}
func (m *IndexAllExperiencesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexAllExperiencesReq.DiscardUnknown(m)
}

var xxx_messageInfo_IndexAllExperiencesReq proto.InternalMessageInfo

type IndexAllExperiencesResp struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=goodsearch.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexAllExperiencesResp) Reset()         { *m = IndexAllExperiencesResp{} }
func (m *IndexAllExperiencesResp) String() string { return proto.CompactTextString(m) }
func (*IndexAllExperiencesResp) ProtoMessage()    {}
func (*IndexAllExperiencesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{6}
}

func (m *IndexAllExperiencesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexAllExperiencesResp.Unmarshal(m, b)
}
func (m *IndexAllExperiencesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexAllExperiencesResp.Marshal(b, m, deterministic)
}
func (m *IndexAllExperiencesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexAllExperiencesResp.Merge(m, src)
}
func (m *IndexAllExperiencesResp) XXX_Size() int {
	return xxx_messageInfo_IndexAllExperiencesResp.Size(m)
}
func (m *IndexAllExperiencesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexAllExperiencesResp.DiscardUnknown(m)
}

var xxx_messageInfo_IndexAllExperiencesResp proto.InternalMessageInfo

func (m *IndexAllExperiencesResp) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

type SearchExperiencesReq struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExperiencesReq) Reset()         { *m = SearchExperiencesReq{} }
func (m *SearchExperiencesReq) String() string { return proto.CompactTextString(m) }
func (*SearchExperiencesReq) ProtoMessage()    {}
func (*SearchExperiencesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{7}
}

func (m *SearchExperiencesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExperiencesReq.Unmarshal(m, b)
}
func (m *SearchExperiencesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExperiencesReq.Marshal(b, m, deterministic)
}
func (m *SearchExperiencesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExperiencesReq.Merge(m, src)
}
func (m *SearchExperiencesReq) XXX_Size() int {
	return xxx_messageInfo_SearchExperiencesReq.Size(m)
}
func (m *SearchExperiencesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExperiencesReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExperiencesReq proto.InternalMessageInfo

func (m *SearchExperiencesReq) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type SearchExperiencesResp struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=goodsearch.Status" json:"status,omitempty"`
	ExperienceIds        []string `protobuf:"bytes,2,rep,name=experience_ids,json=experienceIds,proto3" json:"experience_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExperiencesResp) Reset()         { *m = SearchExperiencesResp{} }
func (m *SearchExperiencesResp) String() string { return proto.CompactTextString(m) }
func (*SearchExperiencesResp) ProtoMessage()    {}
func (*SearchExperiencesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a44eebf31dd75a2c, []int{8}
}

func (m *SearchExperiencesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExperiencesResp.Unmarshal(m, b)
}
func (m *SearchExperiencesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExperiencesResp.Marshal(b, m, deterministic)
}
func (m *SearchExperiencesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExperiencesResp.Merge(m, src)
}
func (m *SearchExperiencesResp) XXX_Size() int {
	return xxx_messageInfo_SearchExperiencesResp.Size(m)
}
func (m *SearchExperiencesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExperiencesResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExperiencesResp proto.InternalMessageInfo

func (m *SearchExperiencesResp) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SUCCESS
}

func (m *SearchExperiencesResp) GetExperienceIds() []string {
	if m != nil {
		return m.ExperienceIds
	}
	return nil
}

func init() {
	proto.RegisterEnum("goodsearch.Status", Status_name, Status_value)
	proto.RegisterType((*GetExperienceReq)(nil), "goodsearch.GetExperienceReq")
	proto.RegisterType((*GetExperienceResp)(nil), "goodsearch.GetExperienceResp")
	proto.RegisterType((*UpdateExperienceReq)(nil), "goodsearch.UpdateExperienceReq")
	proto.RegisterType((*UpdateExperienceResp)(nil), "goodsearch.UpdateExperienceResp")
	proto.RegisterType((*ExperiencePayload)(nil), "goodsearch.ExperiencePayload")
	proto.RegisterType((*IndexAllExperiencesReq)(nil), "goodsearch.IndexAllExperiencesReq")
	proto.RegisterType((*IndexAllExperiencesResp)(nil), "goodsearch.IndexAllExperiencesResp")
	proto.RegisterType((*SearchExperiencesReq)(nil), "goodsearch.SearchExperiencesReq")
	proto.RegisterType((*SearchExperiencesResp)(nil), "goodsearch.SearchExperiencesResp")
}

func init() { proto.RegisterFile("goodsearch.proto", fileDescriptor_a44eebf31dd75a2c) }

var fileDescriptor_a44eebf31dd75a2c = []byte{
	// 378 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x6b, 0xea, 0x40,
	0x10, 0xc7, 0x5f, 0xf2, 0x1e, 0x8a, 0x23, 0x4a, 0x1c, 0x7d, 0x6d, 0x08, 0x95, 0xda, 0x2d, 0x52,
	0xf1, 0x20, 0xc5, 0x1e, 0x7a, 0xea, 0x41, 0x24, 0x15, 0xc1, 0x43, 0x49, 0x08, 0xf4, 0xd4, 0x92,
	0xba, 0x4b, 0x9b, 0x56, 0xdc, 0x35, 0x9b, 0x52, 0x3d, 0xf6, 0xef, 0xed, 0x3f, 0x51, 0x1a, 0xab,
	0x59, 0x63, 0x50, 0xbc, 0x65, 0x67, 0x3e, 0xdf, 0x61, 0x7e, 0x7c, 0x03, 0xc6, 0x33, 0xe7, 0x54,
	0x32, 0x3f, 0x1c, 0xbf, 0x74, 0x44, 0xc8, 0x23, 0x8e, 0x90, 0x44, 0x08, 0x01, 0x63, 0xc0, 0x22,
	0x7b, 0x2e, 0x58, 0x18, 0xb0, 0xe9, 0x98, 0x39, 0x6c, 0x86, 0x65, 0xd0, 0x03, 0x6a, 0x6a, 0x0d,
	0xad, 0x55, 0x70, 0xf4, 0x80, 0x92, 0x6b, 0xa8, 0xa4, 0x18, 0x29, 0xd2, 0x10, 0x22, 0xfc, 0x8b,
	0x16, 0x82, 0x99, 0x7a, 0x1c, 0x89, 0xbf, 0x49, 0x13, 0xaa, 0x9e, 0xa0, 0x7e, 0xc4, 0x76, 0xd7,
	0xff, 0xd4, 0xa0, 0xb6, 0xcd, 0x49, 0x81, 0x6d, 0xc8, 0xc9, 0xc8, 0x8f, 0xde, 0x65, 0x0c, 0x97,
	0xbb, 0xd8, 0x51, 0x66, 0x71, 0xe3, 0x8c, 0xf3, 0x4b, 0xe0, 0x0d, 0x00, 0x5b, 0xab, 0xe3, 0x2e,
	0x8a, 0xdd, 0xba, 0xca, 0x27, 0xb5, 0xef, 0xfc, 0xc5, 0x84, 0xfb, 0xd4, 0x51, 0x04, 0xe4, 0x02,
	0x2a, 0x5b, 0xc0, 0x7a, 0x26, 0x4d, 0x99, 0xc9, 0x84, 0xa3, 0xe1, 0x94, 0xb2, 0x79, 0x6f, 0x32,
	0x49, 0x04, 0xd2, 0x61, 0x33, 0x62, 0xc3, 0x71, 0x66, 0xe6, 0xb0, 0x41, 0xc8, 0x25, 0xd4, 0xdc,
	0x38, 0xb1, 0x59, 0x1e, 0x4d, 0xc8, 0xbf, 0xb1, 0xc5, 0x07, 0x0f, 0x57, 0xab, 0x5b, 0x3d, 0xc9,
	0x2b, 0xfc, 0xcf, 0x50, 0x1c, 0xb8, 0xbf, 0x26, 0x94, 0x93, 0x75, 0x3c, 0x06, 0x54, 0x9a, 0x7a,
	0xe3, 0x6f, 0xab, 0xe0, 0x94, 0x92, 0xe8, 0x90, 0xca, 0x36, 0x81, 0xdc, 0x52, 0x88, 0x45, 0xc8,
	0xbb, 0x5e, 0xbf, 0x6f, 0xbb, 0xae, 0xf1, 0xe7, 0xe7, 0x71, 0xdb, 0x1b, 0x8e, 0x3c, 0xc7, 0x36,
	0xb4, 0xee, 0x97, 0x0e, 0x30, 0xe0, 0x9c, 0x2e, 0x9b, 0xc2, 0x11, 0x94, 0x36, 0xec, 0x83, 0x27,
	0x6a, 0x1b, 0x69, 0xf7, 0x59, 0xf5, 0x1d, 0x59, 0x29, 0xd0, 0x03, 0x23, 0xed, 0x15, 0x3c, 0x55,
	0x25, 0x19, 0x8e, 0xb3, 0x1a, 0xbb, 0x01, 0x29, 0xf0, 0x01, 0xaa, 0x19, 0xc7, 0x43, 0xa2, 0x0a,
	0xb3, 0xef, 0x6e, 0x9d, 0xef, 0x65, 0xa4, 0xc0, 0x7b, 0xa8, 0x6c, 0xdd, 0x08, 0x37, 0xda, 0xca,
	0x3a, 0xba, 0x75, 0xb6, 0x87, 0x90, 0xe2, 0x29, 0x17, 0xff, 0xd4, 0x57, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xdf, 0x19, 0x67, 0xb3, 0xe8, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoodSearchClient is the client API for GoodSearch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodSearchClient interface {
	GetExperience(ctx context.Context, in *GetExperienceReq, opts ...grpc.CallOption) (*GetExperienceResp, error)
	UpdateExperience(ctx context.Context, in *UpdateExperienceReq, opts ...grpc.CallOption) (*UpdateExperienceResp, error)
	IndexAllExperiences(ctx context.Context, in *IndexAllExperiencesReq, opts ...grpc.CallOption) (*IndexAllExperiencesResp, error)
	SearchExperiences(ctx context.Context, in *SearchExperiencesReq, opts ...grpc.CallOption) (*SearchExperiencesResp, error)
}

type goodSearchClient struct {
	cc *grpc.ClientConn
}

func NewGoodSearchClient(cc *grpc.ClientConn) GoodSearchClient {
	return &goodSearchClient{cc}
}

func (c *goodSearchClient) GetExperience(ctx context.Context, in *GetExperienceReq, opts ...grpc.CallOption) (*GetExperienceResp, error) {
	out := new(GetExperienceResp)
	err := c.cc.Invoke(ctx, "/goodsearch.GoodSearch/GetExperience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodSearchClient) UpdateExperience(ctx context.Context, in *UpdateExperienceReq, opts ...grpc.CallOption) (*UpdateExperienceResp, error) {
	out := new(UpdateExperienceResp)
	err := c.cc.Invoke(ctx, "/goodsearch.GoodSearch/UpdateExperience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodSearchClient) IndexAllExperiences(ctx context.Context, in *IndexAllExperiencesReq, opts ...grpc.CallOption) (*IndexAllExperiencesResp, error) {
	out := new(IndexAllExperiencesResp)
	err := c.cc.Invoke(ctx, "/goodsearch.GoodSearch/IndexAllExperiences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodSearchClient) SearchExperiences(ctx context.Context, in *SearchExperiencesReq, opts ...grpc.CallOption) (*SearchExperiencesResp, error) {
	out := new(SearchExperiencesResp)
	err := c.cc.Invoke(ctx, "/goodsearch.GoodSearch/SearchExperiences", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodSearchServer is the server API for GoodSearch service.
type GoodSearchServer interface {
	GetExperience(context.Context, *GetExperienceReq) (*GetExperienceResp, error)
	UpdateExperience(context.Context, *UpdateExperienceReq) (*UpdateExperienceResp, error)
	IndexAllExperiences(context.Context, *IndexAllExperiencesReq) (*IndexAllExperiencesResp, error)
	SearchExperiences(context.Context, *SearchExperiencesReq) (*SearchExperiencesResp, error)
}

// UnimplementedGoodSearchServer can be embedded to have forward compatible implementations.
type UnimplementedGoodSearchServer struct {
}

func (*UnimplementedGoodSearchServer) GetExperience(ctx context.Context, req *GetExperienceReq) (*GetExperienceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExperience not implemented")
}
func (*UnimplementedGoodSearchServer) UpdateExperience(ctx context.Context, req *UpdateExperienceReq) (*UpdateExperienceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExperience not implemented")
}
func (*UnimplementedGoodSearchServer) IndexAllExperiences(ctx context.Context, req *IndexAllExperiencesReq) (*IndexAllExperiencesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IndexAllExperiences not implemented")
}
func (*UnimplementedGoodSearchServer) SearchExperiences(ctx context.Context, req *SearchExperiencesReq) (*SearchExperiencesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchExperiences not implemented")
}

func RegisterGoodSearchServer(s *grpc.Server, srv GoodSearchServer) {
	s.RegisterService(&_GoodSearch_serviceDesc, srv)
}

func _GoodSearch_GetExperience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperienceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodSearchServer).GetExperience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goodsearch.GoodSearch/GetExperience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodSearchServer).GetExperience(ctx, req.(*GetExperienceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodSearch_UpdateExperience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExperienceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodSearchServer).UpdateExperience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goodsearch.GoodSearch/UpdateExperience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodSearchServer).UpdateExperience(ctx, req.(*UpdateExperienceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodSearch_IndexAllExperiences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexAllExperiencesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodSearchServer).IndexAllExperiences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goodsearch.GoodSearch/IndexAllExperiences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodSearchServer).IndexAllExperiences(ctx, req.(*IndexAllExperiencesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoodSearch_SearchExperiences_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchExperiencesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodSearchServer).SearchExperiences(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goodsearch.GoodSearch/SearchExperiences",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodSearchServer).SearchExperiences(ctx, req.(*SearchExperiencesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoodSearch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goodsearch.GoodSearch",
	HandlerType: (*GoodSearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExperience",
			Handler:    _GoodSearch_GetExperience_Handler,
		},
		{
			MethodName: "UpdateExperience",
			Handler:    _GoodSearch_UpdateExperience_Handler,
		},
		{
			MethodName: "IndexAllExperiences",
			Handler:    _GoodSearch_IndexAllExperiences_Handler,
		},
		{
			MethodName: "SearchExperiences",
			Handler:    _GoodSearch_SearchExperiences_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goodsearch.proto",
}
